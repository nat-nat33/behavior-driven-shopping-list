
// PARTIALS
@import "partials/reset";

// MIXINS

$breakpoints: (
  'medium': 500px,
  'large':  800px
) !default;

@mixin respond-to($breakpoint) {
  @if map-has-key($breakpoints, $breakpoint) {
    @media only screen and (min-width: map-get($breakpoints, $breakpoint)) {
      @content;
    }
  }
  @else {
    @warn "Unfortunately, no value could be retrieved from `#{$breakpoint}`. "
        + "Available breakpoints are: #{map-keys($breakpoints)}.";
  }
}


// VARIABLES
$primary-color: orange;
$secondary-color: black;
$textcolor: white;

// STYLES

body {
  // background: linear-gradient(rgba(0, 0, 0, 0.3), rgba(0,0,0, 0.3)),
  background-image: url("/images/breadandstuff.jpg");
  background-repeat: no-repeat;
  background-attachment: fixed;
  background-position: center;
  background-size: cover;
  font-family: 'Slabo 27px', serif;
}

a{
  text-decoration: none;
}

h1, h2, h3, h4 ,h5, h6{
  text-align: left;
}

// HEADER

header {
  border-bottom: 2px solid $secondary-color;
  width: 300px;
  h1 {
    padding: 30px;
    text-align: center;
    font-size: 30px;
    background-color: lighten($primary-color, 70%);

    @include respond-to('medium') {
      font-size: 40px;
    }

    @include respond-to('large') {
      font-size: 72px;
    }
  }
}

header h1 a{
  color: $primary-color;
  transition: all 0.2s ease;

  &:hover{
    color: lighten($primary-color, 20%);
    transition: all 0.2s ease;
    font-size: 72px;

    @include respond-to('medium') {
      font-size: 45px;
    }

    @include respond-to('large') {
      font-size: 72px;
    }
  }
}


.container {
  padding: 10px;
  color: $textcolor;

  h2{
    display: inline-block;
    border-bottom: 1px solid $secondary-color;
    font-size: 28px;
  }

  p{
    padding: 10px 0px;

    @include respond-to('medium') {
      font-size: 22px;
    }

    @include respond-to('large') {
      font-size: 24px;
    }
  }
}